name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore src/ModularGodot.Core.sln

      - name: Get version from tag
        run: |
          # Extract just the tag name without refs/tags/ prefix
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV
          # Extract version without 'v' prefix for dotnet build
          DOTNET_VERSION=${TAG_VERSION#v}
          echo "DOTNET_VERSION=$DOTNET_VERSION" >> $GITHUB_ENV
          echo "Tag version: $TAG_VERSION"
          echo "DotNet version: $DOTNET_VERSION"

      - name: Clean previous builds
        run: dotnet clean src/ModularGodot.Core.sln -c Release

      - name: Clean packages directory
        run: rm -rf packages/*

      - name: Build and pack
        run: dotnet pack src/ModularGodot.Core.sln -c Release -o packages /p:Version=${{ env.DOTNET_VERSION }} /p:PackageVersion=${{ env.DOTNET_VERSION }}

      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ./packages/*.nupkg
          name: Release ${{ env.TAG_VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to NuGet
        run: dotnet nuget push "packages/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

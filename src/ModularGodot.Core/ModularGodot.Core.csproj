<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <PackageId>ModularGodot.Core</PackageId>
    <PackageVersion>0.1.0</PackageVersion>
    <Authors>Your Name</Authors>
    <Description>A modular architecture framework for Godot projects</Description>
    <PackageTags>godot;modular;architecture;framework</PackageTags>
    <RepositoryUrl>https://github.com/yourusername/ModularGodot.Core</RepositoryUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <IncludeReferencedProjects>true</IncludeReferencedProjects>
  </PropertyGroup>

  <ItemGroup>
    <!-- 我们将在这里聚合所有需要的NuGet依赖 -->
    <!-- 确保版本统一 -->
    <PackageReference Include="Autofac" Version="8.4.0" />
    <PackageReference Include="GodotSharp" Version="4.4.1" />
    <PackageReference Include="MediatR" Version="13.0.0" />
    <PackageReference Include="MediatR.Extensions.Autofac.DependencyInjection" Version="13.1.0" />
    <PackageReference Include="Microsoft.Extensions.Caching.Abstractions" Version="9.0.7" />
    <PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="9.0.7" />
    <PackageReference Include="R3" Version="1.3.0" />
    <PackageReference Include="System.Reactive" Version="6.0.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- 
      ✅ 简化打包方式：
      - 通过 ProjectReference 引用子项目。
      - PrivateAssets="all"：告诉NuGet这是构建时的依赖，不要把它作为最终包的 *NuGet包依赖*。
      - 我们会让MSBuild自动把这些项目的输出DLL包含进来，而不是手动指定。
    -->
    <ProjectReference Include="../0_Contracts/0_Contracts.csproj" PrivateAssets="all" />
    <ProjectReference Include="../1_Contexts/1_Contexts.csproj" PrivateAssets="all" />
    <ProjectReference Include="../2_Infrastructure/2_Infrastructure.csproj" PrivateAssets="all" />
    <ProjectReference Include="../3_Repositories/3_Repositories.csproj" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <!-- 手动包含子项目DLL到NuGet包 -->
    <None Include="../0_Contracts/bin/Release/net9.0/0_Contracts.dll" Pack="true" PackagePath="lib/net9.0/" />
    <None Include="../1_Contexts/bin/Release/net9.0/1_Contexts.dll" Pack="true" PackagePath="lib/net9.0/" />
    <None Include="../2_Infrastructure/bin/Release/net9.0/2_Infrastructure.dll" Pack="true" PackagePath="lib/net9.0/" />
    <None Include="../3_Repositories/bin/Release/net9.0/3_Repositories.dll" Pack="true" PackagePath="lib/net9.0/" />
  </ItemGroup>

  <!-- 
    ✅ 修复Target配置，确保子项目DLL正确包含到NuGet包中
  -->
  <Target Name="AddProjectReferencesToPackage" BeforeTargets="_GetPackageFiles">
    <Message Text="Executing AddProjectReferencesToPackage target" Importance="high" />
    <ItemGroup>
      <!-- 包含所有项目引用的输出文件到lib目录 -->
      <TfmSpecificPackageFile Include="@(ReferenceCopyLocalPaths)" 
                              Condition="'%(ReferenceCopyLocalPaths.ReferenceSourceTarget)' == 'ProjectReference'" 
                              PackagePath="lib/$(TargetFramework)/%(ReferenceCopyLocalPaths.DestinationSubPath)" />
    </ItemGroup>
    <Message Text="Added @(TfmSpecificPackageFile->Count()) files to package" Importance="high" />
  </Target>

</Project>